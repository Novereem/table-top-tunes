@using TTTFrontend.Services
@inject AuthenticationService AuthService
@inject SelectedSceneService SelectedSceneService

<div class="d-flex flex-row align-items-center border-bottom position-relative" style="height: 10vh">
    @if (SelectedSceneService.SelectedScene != null)
    {
        <h1 class="text-center m-0 position-absolute w-100" style="z-index: 1;">
            @SelectedSceneService.SelectedScene.Name
        </h1>
    }
    else
    {
        <h1 class="text-center m-0 position-absolute w-100" style="z-index: 1;">Select a scene</h1>
    }

    <div class="ms-auto" @onclick="ToggleDropdown" style="z-index: 2; margin-right: 1%">
        <button class="btn btn-outline-dark" type="button" id="profileDropdown" data-bs-toggle="dropdown" aria-expanded="false" style="outline: none; box-shadow: none;">
            Settings
        </button>

        @if (showDropdown)
        {
            <div class="d-flex dropdown-menu show position-absolute end-0 py-0" style="margin-right: 1%; margin-top: 0.5%; border-radius: 0; width: 2%;">
                <a class="dropdown-item py-2 text-center" href="/profile">Profile</a>
                <button class="dropdown-item py-2 text-center" @onclick="Logout">Logout</button>
            </div>
        }
    </div>
</div>

@code {
    private bool showDropdown = false;

    private void ToggleDropdown()
    {
        showDropdown = !showDropdown;
    }

    private void Logout()
    {
        showDropdown = false;
        AuthService.Logout();
    }

    protected override void OnInitialized()
    {
        SelectedSceneService.OnSceneChanged += StateHasChanged;
    }

    public void Dispose()
    {
        SelectedSceneService.OnSceneChanged -= StateHasChanged;
    }
}